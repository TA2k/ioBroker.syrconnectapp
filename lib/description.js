//export mode an javascript object
module.exports = {
  getSRN: 'Serial number',
  getVER: 'Firmware version',
  getTYP: 'Device type',
  getCNA: 'Device name',
  getALM: 'Alarm code, a human readable message can be received via getSTA()',
  getCDE: '',
  getCS1: 'Capacity exchanger resin 1',
  getCS2: 'Capacity exchanger resin 2',
  getCS3: 'Capacity exchanger resin 3',
  getCYN: 'Current program number',
  getCYT: 'Duration of running program [mm:ss]',
  getDEN: '',
  getDGW: 'Gateway',
  getDWF: 'Average daily water consumption',
  getFCO: 'Iron content',
  getFIR: 'Firmware name',
  getFLO: 'Current flow',
  getHED: 'Holiday start day',
  getHEM: 'Holiday start month',
  getHEY: 'Holiday start year',
  getHSD: 'Holiday end day',
  getHSM: 'Holiday end month',
  getHSY: 'Holiday end year',
  getIPH: '',
  getIWH: 'Water hardness',
  getMAC: 'Mac address',
  getMAN: 'Manufacturer',
  getNOT: 'Alert',
  getOWH: 'Soft water hardness',
  getPA1: '',
  getPA2: '',
  getPA3: '',
  getPRS: 'Water pressure',
  getPRF: 'Present =1 / Absence = 2',
  getPST: 'Pressure sensor installed',
  getRDO: 'Regenerant dosage',
  getRES: 'Remaining capacity',

  getRPD: 'Regeneration every x days',
  getRPW: 'Regeneration every xth day of week',
  getRTH: 'Regeneration time (hour)',
  getRTI: 'Total regeneration time [hh:mm]',
  getRTM: 'Regeneration time (minute)',
  getSRE: 'Service regenerations',
  getSS1: 'Salt supply 1',
  getSS2: 'Salt supply 2',
  getSS3: 'Salt supply 3',
  getSTA: 'Status messages of the regeneration, in this case in German: "Please refill salt"',
  getSV1: 'Amount of salt in the container 1',
  getSV2: 'Amount of salt in the container 2',
  getSV3: 'Amount of salt in the container 3',
  getVAC: '',
  getVS1: '',
  getVS2: '',
  getVS3: '',
  getWHU: 'Unit of water hardness',
  setSDR: 'Regenerate later',
  setSMR: 'Multi regenerate',
  getMXF: 'Maximum flow within this hour',
  getMNP: 'The minimum measured water pressure (reset at midnight)',
  getMXP: 'The maximum measured water pressure (reset at midnight)',
  getMOF: 'Consumption Monday',
  getTUF: 'Consumption Tuesday',
  getWEF: 'Consumption Wednesday',
  getTHF: 'Consumption Thursday',
  getFRF: 'Consumption Friday',
  getSAF: 'Consumption Saturday',
  getSUF: 'Consumption Sunday',
  getTOF: 'Consumption today',
  getYEF: 'Consumption yesterday',
  getCWF: 'Consumption current week',
  getLWF: 'Consumption last week',
  getCMF: 'Consumption current month',
  getLMF: 'Consumption last month',
  getCOF: 'Consumption complete',
  getUWF: 'Consumption untreated',
  getTFO: 'Consumption peak level',
  getAB: 'Valve shut-off: 1 = open, 2 = closed',
  setAB: 'Valve shut-off: 1 = open, 2 = closed',
  getVLV: 'Valve status: 10 = closed, 11 = closing, 20 = open, 21 = opening',
  getLE: 'Leakage volume when present: 1 = ?L, 2 = 100L, 3 = 150L, 4 = 200L',
  setLE: 'Leakage volume when present: 1 = ?L, 2 = 100L, 3 = 150L, 4 = 200L',
  getT2: 'Leakage time (when present?): 1 = ?L, 2 = 1h, 3 = 1.5h, 4 = 2h',
  setT2: 'Leakage time (when present?): 1 = ?L, 2 = 1h, 3 = 1.5h, 4 = 2h',
  getTMP: 'Deactivate leakage protection for n seconds',
  setTMP: 'Deactivate leakage protection for n seconds',
  getUL: 'User profile Leakage protection mode: 0 = present, 1 = absent',
  setUL: 'User profile Leakage protection mode: 0 = present, 1 = absent',
  getCEL: 'Water temperature, e.g. 203 = 20.3Â°C',
  getNPS: 'Microleakage count',
  getRG1: 'Regeneration status for tank 1 (1 if running, 0 otherwise)',
  getRG2: 'Regeneration status for tank 2 (1 if running, 0 otherwise)',
  getRG3: 'Regeneration status for tank 3 (1 if running, 0 otherwise)',
  getLAR: 'Last regeneration timestamp (UNIX format, seconds since 1.1.1970)',
  getTOR: 'Total number of regeneration cycles',
  getNOR: 'Number of regeneration cycles in normal mode',
  getSCR: 'Number of service regeneration cycles (unknown purpose)',
  getINR: 'Number of incomplete regeneration cycles',
  setSIR: 'Start regeneration immediately (0 to start)',
  getMHF: 'Hourly water consumption last Monday (in liters)',
  getUHF: 'Hourly water consumption last Tuesday (in liters)',
  getWHF: 'Hourly water consumption last Wednesday (in liters; remaining hours are 0 if it is currently Wednesday)',
  getHHF: 'Hourly water consumption last Thursday (in liters)',
  getFHF: 'Hourly water consumption last Friday (in liters)',
  getSHF: 'Hourly water consumption last Saturday (in liters)',
  getNHF: 'Hourly water consumption last Sunday (in liters)',
};
